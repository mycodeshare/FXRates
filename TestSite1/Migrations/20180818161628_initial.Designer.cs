// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TestSite1.Models;

namespace TestSite1.Migrations
{
    [DbContext(typeof(TestSite1Context))]
    [Migration("20180818161628_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestSite1.Models.BaseCurrency", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("baseData");

                    b.Property<string>("disclaimer");

                    b.Property<string>("license");

                    b.Property<int>("timestamp");

                    b.HasKey("id");

                    b.ToTable("BaseCurrency");
                });

            modelBuilder.Entity("TestSite1.Models.Rates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AED");

                    b.Property<double>("AFN");

                    b.Property<int>("ALL");

                    b.Property<double>("AMD");

                    b.Property<double>("ANG");

                    b.Property<int?>("BaseCurrencyid");

                    b.HasKey("id");

                    b.HasIndex("BaseCurrencyid");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("TestSite1.Models.Rates", b =>
                {
                    b.HasOne("TestSite1.Models.BaseCurrency")
                        .WithMany("rates")
                        .HasForeignKey("BaseCurrencyid");
                });
#pragma warning restore 612, 618
        }
    }
}
